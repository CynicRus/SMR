unit smr_base;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils,smr_utils,XMLRead, XMLWrite, Dom,smr_types,{$IFDEF MSWINDOWS}smr_win_hook{$ELSE}smr_lin_hook{$ENDIF};

type

  { THook }

  THook = class(TBaseRecorder)
    public
      procedure LoadFromFile(aFileName: string);
      procedure SaveToFile(aFileName: string);
      procedure GenerateScript(var st: TStringList;CodeType: integer); {0 - without SRL; 1- with SRL}
  end;

implementation

{ THook }

{ToDo}
procedure THook.LoadFromFile(aFileName: string);
begin

end;

{ToDo}
procedure THook.SaveToFile(aFileName: string);
begin

end;

procedure THook.GenerateScript(var st: TStringList; CodeType: integer);
var
  i: integer;
  hItem: THookItem;
begin
  st.Add('program Playback;');
  st.Add('//this program was generated by Simba Macros Recorder by Cynic');
  st.Add('');
  st.Add('function FindAndSetTarget(TitlePrefix: String; SetAsTarget: Boolean): Boolean;');
  st.Add('var');
  st.Add(GenSpaces(2)+'T: TSysProcArr;');
  st.Add(GenSpaces(2)+'I: Integer;');
  st.Add('begin');
  st.Add(GenSpaces(2)+'T:= GetProcesses();');
  st.Add(GenSpaces(2)+'for I := 0 to high(T) do');
  st.Add(GenSpaces(3)+'if UpperCase(Trim(TitlePrefix))= UpperCase(Trim(T[i].Title)) then');
  st.Add(GenSpaces(4)+'begin');
  st.Add(genSpaces(5)+'Result := True;');
  st.Add(genSpaces(5)+'if SetAsTarget then');
  st.Add(genSpaces(6)+'begin');
  st.Add(GenSpaces(7)+'SetTarget(T[i]);');
  st.Add(GenSpaces(7)+'ActivateClient;');
  st.Add(GenSpaces(6)+'end;');
  st.Add(GenSpaces(4)+'end;');
  st.Add('end;');
  st.Add('');
  st.Add('procedure PlayMacro;');
  st.Add('begin');
  for i:=0 to Count-1 do
   begin
     hItem:=Items[i];
      if Hitem.ItemType then
       begin
       case hItem.ClickType of
       0:
       begin
        st.Add(GenSpaces(2)+'MoveMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+');');
       st.Add(GenSpaces(2)+'ClickMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+',mouse_Left);');
       end;
       2:
       begin
       st.Add(GenSpaces(2)+'MoveMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+');');
       st.Add(GenSpaces(2)+'ClickMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+',mouse_Left);');
       end;
       3:
       begin
         st.Add(GenSpaces(2)+'MoveMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+');');
         st.Add(GenSpaces(2)+'ClickMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+',mouse_Left);');
         st.Add(GenSpaces(2)+'ClickMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+',mouse_Left);');
         end;
       5:
       begin
       st.Add(GenSpaces(2)+'MoveMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+');');
       st.Add(GenSpaces(2)+'ClickMouse('+IntToStr(hItem.ClickCoord.x)+','+IntToStr(hItem.ClickCoord.y)+',mouse_Left);');
       end;
       end;
      end
      else
      begin
        st.Add('//Key = '+hItem.VirtualKey);
        st.Add(GenSpaces(2)+'KeyDown('+IntToStr(hItem.KeyCode)+');');
       // st.Add(GenSpaces(2)+'Wait(RandomRange('+IntToStr(hItem.PressedTime-10)+','+IntToStr(hItem.PressedTime+15)+'));');
        st.Add(GenSpaces(2)+'KeyUp('+IntToStr(hItem.KeyCode)+');');
      end;
   end;
  st.Add('end;');
  st.Add('');
  st.Add('begin');
  st.Add(GenSpaces(2)+'if FindAndSetTarget('+#39+self.WinCaption+#39+',true) then');
  st.Add(GenSpaces(3)+'PlayMacro');
  st.Add(GenSpaces(2)+'else');
  st.Add(GenSpaces(3)+'TerminateScript;');
  st.Add('end.');
end;

end.

